Вставка записи в таблицу
INSERT INTO book (title, author, price,amount) VALUES ("Мастер и Маргарита", "Булгаков М.А.", 670.99, 3);
INSERT INTO book (title, author, price,amount) VALUES ("Белая гвардия",	"Булгаков М.А.", 540.50, 5);
INSERT INTO book (title, author, price,amount) VALUES ("Идиот",	"Достоевский Ф.М.", 460.00, 10);
INSERT INTO book (title, author, price,amount) VALUES ("Братья Карамазовы",	"Достоевский Ф.М.", 799.01, 2);

BETWEEN AND IN
SELECT title, author FROM book Where (price BETWEEN 540.00 AND 800) AND  (amount in (2,3,5,7))

Группировки и суммирования по столбцам
SELECT author as Автор, COUNT(author) as Различных_книг, SUM(amount) AS Количество_экземпляров from book GROUP BY Автор

SELECT author, COUNT(author), COUNT(amount), COUNT(*)
FROM book
GROUP BY author;
Примечание

Из таблицы с результатами запроса видно, что функцию COUNT()  можно применять к любому столбцу, в том числе можно использовать и *, если таблица не содержит пустых значений. Если же в столбцах есть значения Null, (для группы по автору Есенин в нашем примере), то

COUNT(*) —  подсчитывает  все записи, относящиеся к группе, в том числе и со значением NULL;
COUNT(имя_столбца) — возвращает количество записей конкретного столбца (только NOT NULL), относящихся к группе.

Вложенные запросы
	вложенные запросы могут вставляться в основной запрос после ключевого слова SELECT
Вложенный запрос, возвращающий одно значение, может использоваться в выражениях как обычный операнд, например, к нему можно что-то прибавить, отнять и пр.
	SELECT author, title, price FROM book WHERE price <= (SELECT MIN(price) FROM book)+150 ORDER BY price
Вложенный запрос, операторы ANY и ALL
	При использовании оператора ANY в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно хотя бы для одного элемента результирующего запроса. Как работает оператор ANY():
		amount > ANY (10, 12) эквивалентно amount > 10
		amount < ANY (10, 12) эквивалентно amount < 12
		amount = ANY (10, 12) эквивалентно (amount = 10) OR (amount = 12), а также amount IN  (10,12)
		amount <> ANY (10, 12) вернет все записи с любым значением amount, включая 10 и 12
	При использовании оператора ALL в результирующую таблицу будут включены все записи, для которых  выражение со знаком отношения верно для всех элементов результирующего запроса. Как работает оператор ALL:
		amount > ALL (10, 12) эквивалентно amount > 12
		amount < ALL (10, 12) эквивалентно amount < 10
		amount = ALL (10, 12) не вернет ни одной записи, так как эквивалентно (amount = 10) AND (amount = 12)
		amount <> ALL (10, 12) вернет все записи кроме тех,  в которыхamount равно 10 или 12
	ПРИМЕР:
		SELECT author,title, price FROM book WHERE price<ANY ( SELECT MIN(price) FROM book GROUP BY author )
	Пример запрос в запросе
		SELECT title, author, amount, ABS(amount - (SELECT MAX(amount) FROM book)) AS Заказ
			FROM book WHERE amount <> (SELECT MAX(amount) FROM book)
			
Математические функции
В SQL реализовано множество  математических функций для работы с числовыми данными. В таблице приведены некоторые из них.

Функция	Описание	Пример
CEILING(x)	возвращает наименьшее целое число, большее или равное x
(округляет до целого числа в большую сторону)	CEILING(4.2)=5
CEILING(-5.8)=-5
ROUND(x, k)	округляет значение x до k знаков после запятой,
если k не указано – x округляется до целого	ROUND(4.361)=4
ROUND(5.86592,1)=5.9
FLOOR(x)	возвращает наибольшее целое число, меньшее или равное x
(округляет до  целого числа в меньшую сторону)	FLOOR(4.2)=4
FLOOR(-5.8)=-6
POWER(x, y)	возведение x в степень y	POWER(3,4)=81.0
SQRT(x)	квадратный корень из x	SQRT(4)=2.0
SQRT(2)=1.41...
DEGREES(x)	конвертирует значение x из радиан в градусы	DEGREES(3) = 171.8...
RADIANS(x)	конвертирует значение x из градусов в радианы	RADIANS(180)=3.14...
ABS(x)	модуль числа x	ABS(-1) = 1
ABS(1) = 1
PI()	pi = 3.1415926...	 